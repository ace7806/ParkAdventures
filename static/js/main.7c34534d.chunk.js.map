{"version":3,"sources":["components/nav/NavBar.js","components/header/Header.js","services/nationalServiceAPI.js","components/parkCard/ParkCard.js","components/SearchComponent/Parks.js","components/SearchComponent/SearchPage.js","components/parks/parkInfo/parkDatesComponent/ParkDates.js","components/parks/parkInfo/lowerRightInfoComponent/LowerRightInfo.js","components/parks/parkInfo/mainDescriptionComponent/MainDesc.js","components/parks/parkInfo/ParkInfoLayout.js","components/parks/parkInfo/webcam/Webcam.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Box","sx","width","height","backgroundColor","Grid","container","spacing","align","item","xs","src","alt","Header","class","api_key","api","axios","create","baseURL","getActivities","a","get","data","getParks","arr","selectedState","length","getParksByActivity","id","getParkWebcam","parkCode","ParkCard","props","park","description","fullName","images","useHistory","Card","maxWidth","CardActionArea","component","Link","to","pathname","state","CardMedia","image","url","CardContent","Typography","gutterBottom","variant","color","Parks","parks","useState","parkInfo","setParkInfo","cards","setCards","setUp","console","log","result","splice","useEffect","marginTop","map","v","Button","onClick","SearchPage","addParkToList","forEach","push","setState","activities","activityList","stateAbbreviations","this","direction","alignItems","justifyContent","Paper","Autocomplete","p","disablePortal","options","renderInput","params","TextField","label","onChange","event","newValue","getOptionLabel","option","name","Component","ParkDates","dates","standardHours","overflow","fontWeight","monday","tuesday","wednesday","thursday","friday","saturday","sunday","LowerRightInfo","entranceFees","cost","directionsInfo","opacity","MainDesc","contacts","phoneNumbers","phoneNumber","emailAddresses","emailAddress","ParkInfoLayout","location","operatingHours","style","target","Webcam","webcams","setWebcams","count","setCount","ImageList","cols","webcam","ImageListItem","title","loading","Footer","paddingRight","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c34534d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Box,Grid,Typography } from '@mui/material'\r\nimport \"./NavBar.css\" \r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <Box sx={{width:1,height:50,backgroundColor:\"#131313\"}}>\r\n            <Grid container spacing={1} align='center'>\r\n            <Grid item xs={2}>\r\n            <img src=\"https://nat-parks.web.app/images/logo_white.svg\" alt=\"\"/>\r\n            </Grid>\r\n            \r\n\r\n            </Grid>\r\n        </Box>\r\n            \r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport \"./Header.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div >\r\n            <div class = 'page-header'>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"column\">\r\n                            <h1>Park Adventures</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from \"axios\";\r\n\r\nvar api_key = 'api_key=qd0XGTZNUNNUz80pWZ3YM73n1407pIXIWPTGI8np'\r\nconst api = axios.create({\r\n    baseURL: `https://developer.nps.gov/api/v1/`\r\n  });\r\n\r\n\r\nexport const getActivities = async() => {\r\n    return  (await api.get(\"/activities?\"+ api_key)).data.data\r\n    }\r\n\r\nexport const getParks = async(arr,selectedState) => {\r\n    if(arr==null){return []}\r\n    return  (await api.get(\"/parks?\"+\"parkCode=\"+arr+\"&stateCode=\"+selectedState+ \"&limit=\"+arr.length+\"&\"+ api_key)).data.data\r\n    }\r\n    \r\n\r\nexport const getParksByActivity = async(id) => {\r\n    return  (await api.get(\"/activities/parks?id=\"+id+\"&\" + api_key)).data.data\r\n    }\r\n\r\nexport const getParkWebcam = async(parkCode) => {\r\n    return (await api.get(\"/webcams?parkCode=\"+parkCode+\"&\"+api_key)).data.data\r\n}\r\n","import React from 'react'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\nimport {Link,useHistory} from \"react-router-dom\";\r\n\r\nconst ParkCard = (props) => {\r\n    const {description,fullName,images} = props.park\r\n    const history = useHistory();\r\n    return (\r\n    \r\n    <Card sx={{ maxWidth: 500 }}>\r\n      <CardActionArea component={Link} to={{pathname:\"/about\", state:props.park }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image={images[0].url}\r\n          alt=\"green iguana\"/>\r\n            \r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {fullName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default ParkCard\r\n","import React from 'react'\r\nimport { useState,useEffect  } from \"react\";\r\nimport ParkCard from '../parkCard/ParkCard'\r\nimport { Grid,Button } from '@mui/material'\r\nimport { getParks } from '../../services/nationalServiceAPI'\r\n\r\n//we store all the parks at parkInfo but since we want infinite scrolling and\r\n// rendering all of them at the start is extremely slow\r\n//we use the cards array to actively remove the first 10 elements of \r\n//the parkInfo array and add it to the grid every time we load more parks\r\n\r\nconst Parks = (props) => {\r\n    const {parks,selectedState} = props\r\n    const [parkInfo, setParkInfo] = useState([]);\r\n    const [cards,setCards] = useState([]);\r\n    const loadMoreParks = ()=>{\r\n        setCards([...cards,...parkInfo.splice(0,10)])\r\n        setParkInfo([...parkInfo])\r\n        console.log(parkInfo.length);\r\n        \r\n    }\r\n\r\n\r\n    const setUp = async()=>{\r\n        console.log(selectedState);\r\n        const result = await getParks(parks,selectedState)        \r\n        console.log(result.length);\r\n        setCards([...result.splice(0,10)]) //grab the first ten elements and render those cards\r\n        setParkInfo(result)\r\n       }\r\n    useEffect(() => {\r\n        setUp()\r\n        \r\n      }, [parks]);\r\n    return (\r\n        \r\n            <Grid container sx={{marginTop:1}} spacing={1} align=\"center\">\r\n                {cards.map(v=>{\r\n                    return  (<Grid item xs={6}> <ParkCard park={v}/> </Grid>)\r\n                })}\r\n                           {parkInfo.length> 10&&<Button sx={{width:1}} onClick={loadMoreParks} variant=\"text\">LOAD MORE PARKS</Button>}\r\n\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default Parks\r\n","import React, { Component } from 'react'\r\nimport { getActivities,getParksByActivity } from '../../services/nationalServiceAPI'\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Parks from './Parks';\r\nimport \"./Test.css\"\r\nimport { Grid,Paper} from '@mui/material';\r\n\r\n\r\nexport default class SearchPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            activityList : [],\r\n            parks:[],\r\n            stateAbbreviations: [\r\n                'AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA',\r\n                'GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',\r\n                'MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND',\r\n                'MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT',\r\n                'VT','VI','VA','WA','WV','WI','WY'\r\n               ],\r\n            selectedState: \"\",\r\n          }\r\n    }\r\n\r\n    addParkToList = async(id) => {\r\n            this.state.parks =[]\r\n            const result = await getParksByActivity(id)\r\n            result.forEach(v => {\r\n                v.parks.forEach(park=>this.state.parks.push(park.parkCode))\r\n            }); \r\n            this.setState({parks:[...this.state.parks]})\r\n    }\r\n\r\n    setUp = async() => {\r\n        const activities = await getActivities()\r\n        this.setState({activityList:activities})\r\n        \r\n    }\r\n \r\n    componentDidMount() {\r\n        this.setUp()      \r\n        }\r\n\r\n\r\n    render() {\r\n        //all the grid containers are for centering and laying out the components nicely\r\n        return (\r\n            <div>\r\n                \r\n                <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n                     <Grid item xs={4}>\r\n                        <Paper sx={{backgroundColor:'white',marginTop:-6}}>\r\n                        <Grid item container spacing={0} direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Autocomplete\r\n                            id=\"states-search-bar\"\r\n                            sx = {{width:200,p:3,}}\r\n                            disablePortal\r\n                            options={this.state.stateAbbreviations}\r\n                            renderInput={(params) => <TextField  {...params} label=\"Select State\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if(newValue!=null)\r\n                                this.setState({selectedState: newValue})\r\n                                this.setState({parks:[...this.state.parks]}) // trigger re-render when changing states while viewing the same activity\r\n                            }}\r\n                            />\r\n                            \r\n                            </Grid>\r\n                        <Grid item xs={8}><Autocomplete\r\n                            id=\"activities-search-bar\"\r\n                            sx = {{width:500,p:3,}}\r\n                            disablePortal\r\n                            options={this.state.activityList}\r\n                            getOptionLabel={option => option.name}\r\n                            renderInput={(params) => <TextField  {...params} label=\"Select Activity\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if(newValue!=null){this.addParkToList(newValue.id)}\r\n                            }}\r\n                            /></Grid>\r\n                        </Grid>\r\n                        \r\n                        \r\n                        </Paper>\r\n                        </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                \r\n               \r\n                \r\n                  <Parks parks = {this.state.parks} selectedState={this.state.selectedState}/>\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Typography } from '@mui/material';\r\nimport { Paper, Button } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ParkDates = (props) => {\r\n    const {standardHours,description}= props.dates\r\n    console.log(props.dates);\r\n    return (\r\n        <Paper sx={{height:720, backgroundColor:\"rgb(110, 171, 106)\",overflow:\"auto\",color:\"white\"}}>\r\n            <Button variant=\"outlined\" component={Link} to={{pathname:\"/\"}}>go back</Button>\r\n            <Typography sx={{p:2,fontWeight:900}} variant=\"h2\">Park Hours</Typography>\r\n            <Typography sx={{p:1}} variant=\"h6\">{description}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Monday:{standardHours.monday}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Tuesday:{standardHours.tuesday}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Wednesday:{standardHours.wednesday}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Thursday:{standardHours.thursday}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Friday:{standardHours.friday}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Saturday:{standardHours.saturday}</Typography>\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"subtitle2\">Sunday:{standardHours.sunday}</Typography>\r\n            \r\n            \r\n            \r\n            \r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ParkDates\r\n","import React from 'react'\r\nimport { Paper,Typography } from '@mui/material'\r\nimport \"./LowerRightInfo.css\"\r\n\r\n\r\nconst LowerRightInfo = (props) => {\r\n    console.log(props);\r\n    const {cost,description,directionsInfo} = props.entranceFees[0]\r\n    \r\n    return (\r\n        <Paper  sx={{height:500,overflow: 'auto',backgroundColor:\"rgb(69, 41, 30)\",color:\"white\",opacity:0.9}} >\r\n            <Typography sx={{p:1,fontWeight:900}} variant=\"h4\">Entrance Fee: ${cost}</Typography>\r\n            <Typography sx={{p:1,fontWeight:700}} variant=\"body1\">{description}</Typography>\r\n            <Typography sx={{p:1,fontWeight:600}} variant=\"body2\">{props.directionsInfo}</Typography>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default LowerRightInfo\r\n","import React from 'react'\r\nimport { Paper,Typography,Button } from '@mui/material'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst MainDesc = (props) => {\r\n    const {contacts,fullName,description}=props.park\r\n    console.log(props);\r\n    return (\r\n        <Paper sx={{height:350,overflow:\"auto\",backgroundColor:\"bisque\",opacity:0.9}}>\r\n            <Typography sx={{p:1,fontWeight:600}} variant=\"h4\">{fullName}</Typography>\r\n            <Typography sx={{p:1,fontWeight:600}} variant=\"body1\">{description}</Typography>\r\n            <Typography sx={{p:1,fontWeight:700}} variant=\"subtitle2\">Phone Number: {contacts.phoneNumbers[0].phoneNumber}</Typography>\r\n            <Typography sx={{p:1,fontWeight:700}} variant=\"subtitle2\">Email Adress: {contacts.emailAddresses[0].emailAddress}</Typography>\r\n            <Button variant=\"outlined\" component={Link} to={{pathname:\"/webcam\",state:props.park}}>more images</Button>\r\n            \r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default MainDesc\r\n","import React from 'react'\r\nimport { Grid } from '@mui/material'\r\nimport ParkDates from './parkDatesComponent/ParkDates';\r\nimport LowerRightInfo from './lowerRightInfoComponent/LowerRightInfo';\r\nimport MainDesc from './mainDescriptionComponent/MainDesc';\r\n\r\n\r\nconst ParkInfoLayout = (props) => {\r\n    const {operatingHours,entranceFees,description,fullName,contacts,directionsInfo,id}= props.location.state\r\n    return (\r\n        \r\n            <Grid container  spacing={0}>\r\n                <Grid item xs={2.7}>\r\n                <div class=\"side\">\r\n                        <ParkDates dates = {operatingHours[0]}/>\r\n                        \r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={6.3} >\r\n                    <img style={{height:720}} target=\"_top\" src={props.location.state.images[0].url} alt=\"oops\"></img>\r\n                        <div class=\"main\">\r\n                        <MainDesc park={props.location.state}/>\r\n                        \r\n                        </div>\r\n                \r\n                </Grid>\r\n                <Grid  item container xs  justifyContent=\"flex-end\" alignItems=\"flex-end\" spacing={0}>\r\n                    \r\n                <Grid item xs={12}>\r\n                    <div class=\"side\">\r\n                        <LowerRightInfo entranceFees = {entranceFees} directionsInfo={directionsInfo}/>\r\n                        \r\n                    </div></Grid>\r\n                \r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default ParkInfoLayout\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@mui/material'\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport { getParkWebcam } from '../../../../services/nationalServiceAPI';\r\nimport { useState,useEffect } from 'react';\r\n//Since not all national parks have webcams, and some dont even let you get their images i decided that if \r\n//i couldnt render any webcam images i'll render the normal park images\r\nconst Webcam = (props) => {\r\n    const {images,parkCode} = props.location.state\r\n    const [webcams, setWebcams] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n\r\n\r\n    const setUp = async()=>{\r\n        const result = await getParkWebcam(parkCode)        \r\n        setWebcams(result)   \r\n        console.log(result);     \r\n       }\r\n    useEffect(() => {\r\n        setUp()\r\n        \r\n      }, []);\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" component={Link} to={{pathname:\"/about\",state:props.location.state}}>Park Info</Button>\r\n            <ImageList sx={{ width: 1, height: 1 }} cols={3} >\r\n                \r\n                {webcams.map((webcam) =>{\r\n                    return webcam.images.map(item=>{\r\n                        setCount(count+1)\r\n                        return <ImageListItem key={item.title}>\r\n                                    <img\r\n                                        src={item.url}\r\n                                        alt={item.title}\r\n                                        loading=\"lazy\"\r\n                                    />\r\n                                </ImageListItem>\r\n                    })} \r\n                \r\n                    \r\n                )}\r\n\r\n                {count==0&&images.map(item=>{\r\n                        return <ImageListItem key={item.title}>\r\n                                    <img\r\n                                        src={item.url}\r\n                                        alt={item.title}\r\n                                        loading=\"lazy\"\r\n                                    />\r\n                                </ImageListItem>\r\n                    })} \r\n                \r\n                    \r\n                \r\n            </ImageList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Webcam\r\n","import React from 'react'\r\nimport { Box,Grid,Typography } from '@mui/material'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Box sx={{width:1,height:50}}>\r\n        \r\n        <Grid container spacing={1} align='center'>\r\n        <Grid item xs={2}>\r\n        <img src=\"https://nat-parks.web.app/images/logo_white.svg\" alt=\"\"/>\r\n            <Typography>Copyright © 2021</Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        <Typography>Made possible by the National Park Service APIs</Typography>       \r\n        </Grid>\r\n        <Grid item xs>\r\n            <Typography sx={{paddingRight:3}}>For more information about national parks, \r\n                upcoming park events, anniversaries, and awards, view\r\n                 the National Park Service website.</Typography>\r\n        </Grid>\r\n\r\n        </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport NavBar from './components/nav/NavBar';\nimport Header from './components/header/Header';\nimport SearchPage from './components/SearchComponent/SearchPage';\nimport ParkInfoLayout from './components/parks/parkInfo/ParkInfoLayout'\nimport Webcam from './components/parks/parkInfo/webcam/Webcam';\nimport {BrowserRouter, Switch,Route,Link} from \"react-router-dom\";\nimport Footer from './components/footer/Footer';\n\n\nfunction App() {\n\n\n  return (\n    \n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      \n      \n      \n           \n        <Switch>\n          \n          <Route path=\"/about\" component={ParkInfoLayout} />\n          <Route path=\"/webcam\" component={Webcam} />\n\n            \n          <Route path=\"/\">\n            <NavBar />\n            <Header />\n            <SearchPage />\n          </Route>\n        </Switch>\n\n        \n      <Footer />\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}